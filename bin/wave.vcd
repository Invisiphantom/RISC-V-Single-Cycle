$date
	Sat Dec 23 18:55:53 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module arch_tb $end
$var reg 1 ! clk $end
$scope module arch_inst $end
$var wire 1 ! clk $end
$var wire 1 " zero $end
$var wire 32 # writeData_R [31:0] $end
$var wire 1 $ u_less $end
$var wire 1 % s_less $end
$var wire 32 & readData_M [31:0] $end
$var wire 32 ' readData2_R [31:0] $end
$var wire 32 ( readData1_R [31:0] $end
$var wire 32 ) instruction [31:0] $end
$var wire 32 * imm [31:0] $end
$var wire 32 + aluResult [31:0] $end
$var wire 4 , aluControl [3:0] $end
$var wire 32 - aluB [31:0] $end
$var wire 32 . aluA [31:0] $end
$var wire 1 / RegWrite $end
$var wire 32 0 PCnext [31:0] $end
$var wire 32 1 PCincre [31:0] $end
$var wire 32 2 PCaddress [31:0] $end
$var wire 1 3 MemWrite $end
$var wire 1 4 MemRead $end
$var wire 1 5 Lui $end
$var wire 1 6 JumpReg $end
$var wire 1 7 Jump $end
$var wire 1 8 Halt $end
$var wire 1 9 Cnd $end
$var wire 1 : Branch $end
$var wire 1 ; Auipc $end
$var wire 1 < ALUSrc $end
$var wire 2 = ALUOp [1:0] $end
$scope module u_ALU $end
$var wire 1 " zero $end
$var wire 1 $ u_less $end
$var wire 1 % s_less $end
$var wire 4 > aluControl [3:0] $end
$var wire 32 ? aluB [31:0] $end
$var wire 32 @ aluA [31:0] $end
$var reg 32 A aluResult [31:0] $end
$upscope $end
$scope module u_ALUControl $end
$var wire 3 B funct3 [2:0] $end
$var wire 1 C funct7_30 $end
$var wire 2 D ALUOp [1:0] $end
$var reg 4 E aluControl [3:0] $end
$upscope $end
$scope module u_ALU_A $end
$var wire 32 F readData1_R [31:0] $end
$var wire 32 G PCaddress [31:0] $end
$var wire 1 5 Lui $end
$var wire 1 ; Auipc $end
$var reg 32 H aluA [31:0] $end
$upscope $end
$scope module u_ALU_B $end
$var wire 32 I readData2_R [31:0] $end
$var wire 32 J imm [31:0] $end
$var wire 1 < ALUSrc $end
$var reg 32 K aluB [31:0] $end
$upscope $end
$scope module u_Branch $end
$var wire 3 L funct3 [2:0] $end
$var wire 1 % s_less $end
$var wire 1 $ u_less $end
$var wire 1 " zero $end
$var wire 1 : Branch $end
$var reg 1 9 Cnd $end
$upscope $end
$scope module u_Control $end
$var wire 7 M Opcode [6:0] $end
$var wire 1 / RegWrite $end
$var wire 1 3 MemWrite $end
$var wire 1 4 MemRead $end
$var wire 1 5 Lui $end
$var wire 1 6 JumpReg $end
$var wire 1 7 Jump $end
$var wire 1 : Branch $end
$var wire 1 ; Auipc $end
$var wire 1 < ALUSrc $end
$var wire 2 N ALUOp [1:0] $end
$var reg 1 8 Halt $end
$var reg 11 O control [10:0] $end
$upscope $end
$scope module u_ImmGen $end
$var wire 32 P instruction [31:0] $end
$var wire 7 Q Opcode [6:0] $end
$var reg 32 R imm [31:0] $end
$upscope $end
$scope module u_InstMem $end
$var wire 32 S instruction [31:0] $end
$var wire 32 T PCaddress [31:0] $end
$upscope $end
$scope module u_Mem $end
$var wire 1 4 MemRead $end
$var wire 1 3 MemWrite $end
$var wire 1 ! clk $end
$var wire 3 U funct3 [2:0] $end
$var wire 32 V memAddr [31:0] $end
$var wire 32 W writeData_M [31:0] $end
$var reg 32 X readData_M [31:0] $end
$upscope $end
$scope module u_PC $end
$var wire 1 ! clk $end
$var wire 32 Y PCnext [31:0] $end
$var reg 32 Z PCaddress [31:0] $end
$upscope $end
$scope module u_PCIncre $end
$var wire 32 [ PCaddress [31:0] $end
$var wire 32 \ PCincre [31:0] $end
$upscope $end
$scope module u_PCNext $end
$var wire 1 9 Cnd $end
$var wire 1 8 Halt $end
$var wire 1 7 Jump $end
$var wire 1 6 JumpReg $end
$var wire 32 ] PCaddress [31:0] $end
$var wire 32 ^ PCincre [31:0] $end
$var wire 32 _ aluResult [31:0] $end
$var wire 32 ` imm [31:0] $end
$var reg 32 a PCnext [31:0] $end
$upscope $end
$scope module u_RegWrite $end
$var wire 1 7 Jump $end
$var wire 1 6 JumpReg $end
$var wire 1 4 MemRead $end
$var wire 32 b PCincre [31:0] $end
$var wire 32 c aluResult [31:0] $end
$var wire 32 d readData_M [31:0] $end
$var reg 32 e writeData_R [31:0] $end
$upscope $end
$scope module u_Regs $end
$var wire 1 / RegWrite $end
$var wire 32 f a0 [31:0] $end
$var wire 32 g a1 [31:0] $end
$var wire 32 h a2 [31:0] $end
$var wire 32 i a3 [31:0] $end
$var wire 32 j a4 [31:0] $end
$var wire 32 k a5 [31:0] $end
$var wire 32 l a6 [31:0] $end
$var wire 32 m a7 [31:0] $end
$var wire 1 ! clk $end
$var wire 32 n gp [31:0] $end
$var wire 32 o ra [31:0] $end
$var wire 32 p readData1_R [31:0] $end
$var wire 32 q readData2_R [31:0] $end
$var wire 5 r readReg1 [4:0] $end
$var wire 5 s readReg2 [4:0] $end
$var wire 32 t s0 [31:0] $end
$var wire 32 u s1 [31:0] $end
$var wire 32 v sp [31:0] $end
$var wire 32 w t0 [31:0] $end
$var wire 32 x t1 [31:0] $end
$var wire 32 y t2 [31:0] $end
$var wire 32 z tp [31:0] $end
$var wire 32 { writeData_R [31:0] $end
$var wire 5 | writeReg [4:0] $end
$var wire 32 } x0 [31:0] $end
$var integer 32 ~ i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 ~
b0 }
b10 |
b11011110000 {
b0 z
b0 y
b0 x
b0 w
b11100000000 v
b0 u
b0 t
b10000 s
b10 r
b0 q
b11100000000 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b11011110000 e
bx d
b11011110000 c
b111110000 b
b111110000 a
b11111111111111111111111111110000 `
b11011110000 _
b111110000 ^
b111101100 ]
b111110000 \
b111101100 [
b111101100 Z
b111110000 Y
bx X
b0 W
b11011110000 V
b0 U
b111101100 T
b11111111000000010000000100010011 S
b11111111111111111111111111110000 R
b10011 Q
b11111111000000010000000100010011 P
b11110000000 O
b11 N
b10011 M
b0 L
b11111111111111111111111111110000 K
b11111111111111111111111111110000 J
b0 I
b11100000000 H
b111101100 G
b11100000000 F
b10 E
b11 D
1C
b0 B
b11011110000 A
b11100000000 @
b11111111111111111111111111110000 ?
b10 >
b11 =
1<
0;
0:
09
08
07
06
05
04
03
b111101100 2
b111110000 1
b111110000 0
1/
b11100000000 .
b11111111111111111111111111110000 -
b10 ,
b11011110000 +
b11111111111111111111111111110000 *
b11111111000000010000000100010011 )
b11100000000 (
b0 '
bx &
0%
1$
b11011110000 #
0"
0!
$end
#5
0"
b11011111100 #
b11011111100 e
b11011111100 {
0/
b0 =
b0 D
b0 N
13
0$
b1100 -
b1100 ?
b1100 K
b10 ,
b10 >
b10 E
b1000100000 O
b1100 *
b1100 J
b1100 R
b1100 `
b11011111100 +
b11011111100 A
b11011111100 V
b11011111100 _
b11011111100 c
b111110100 0
b111110100 Y
b111110100 a
b100011 Q
b10 U
b10 L
b10 B
0C
b1100 |
b1 s
b100011 M
b100010010011000100011 )
b100010010011000100011 P
b100010010011000100011 S
b11011110000 .
b11011110000 @
b11011110000 H
b111110100 1
b111110100 \
b111110100 ^
b111110100 b
b111110000 2
b111110000 G
b111110000 T
b111110000 Z
b111110000 [
b111110000 ]
b11011110000 (
b11011110000 F
b11011110000 p
b11011110000 v
1!
#10
0!
#15
b10 #
b10 e
b10 {
1/
b11 =
b11 D
b11 N
03
b10 -
b10 ?
b10 K
b10 +
b10 A
b10 V
b10 _
b10 c
b11110000000 O
b10 *
b10 J
b10 R
b10 `
b111111000 0
b111111000 Y
b111111000 a
1$
1%
b0 .
b0 @
b0 H
b10011 Q
b0 U
b0 L
b0 B
b1011 |
b11011110000 '
b11011110000 I
b11011110000 W
b11011110000 q
b10 s
b0 (
b0 F
b0 p
b0 r
b10011 M
b1000000000010110010011 )
b1000000000010110010011 P
b1000000000010110010011 S
b111111000 1
b111111000 \
b111111000 ^
b111111000 b
b111110100 2
b111110100 G
b111110100 T
b111110100 Z
b111110100 [
b111110100 ]
1!
#20
0!
#25
b1 #
b1 e
b1 {
b1 +
b1 A
b1 V
b1 _
b1 c
b1 -
b1 ?
b1 K
b1 *
b1 J
b1 R
b1 `
b111111100 0
b111111100 Y
b111111100 a
b1010 |
b0 '
b0 I
b0 W
b0 q
b1 s
b100000000010100010011 )
b100000000010100010011 P
b100000000010100010011 S
b111111100 1
b111111100 \
b111111100 ^
b111111100 b
b111111000 2
b111111000 G
b111111000 T
b111111000 Z
b111111000 [
b111111000 ]
b10 g
1!
#30
0!
#35
b1000000000 #
b1000000000 e
b1000000000 {
1"
b0 +
b0 A
b0 V
b0 _
b0 c
x<
bx =
bx D
bx N
17
0%
b11111111111111111111111111101000 -
b11111111111111111111111111101000 ?
b11111111111111111111111111101000 K
b0 ,
b0 >
b0 E
b1xxx0001000 O
b11111111111111111111111111101000 *
b11111111111111111111111111101000 J
b11111111111111111111111111101000 R
b11111111111111111111111111101000 `
b111100100 0
b111100100 Y
b111100100 a
b1101111 Q
b111 U
b111 L
b111 B
1C
b1 |
b1001 s
b11111 r
b1101111 M
b11111110100111111111000011101111 )
b11111110100111111111000011101111 P
b11111110100111111111000011101111 S
b1 f
b1000000000 1
b1000000000 \
b1000000000 ^
b1000000000 b
b111111100 2
b111111100 G
b111111100 T
b111111100 Z
b111111100 [
b111111100 ]
1!
#40
0!
#45
b10 ,
b10 >
b10 E
0"
b11 +
b11 A
b11 V
b11 _
b11 c
0<
b10 =
b10 D
b10 N
07
1$
1%
b10 -
b10 ?
b10 K
b10100000000 O
bx *
bx J
bx R
bx `
b11 #
b11 e
b11 {
b111101000 0
b111101000 Y
b111101000 a
b1 .
b1 @
b1 H
b110011 Q
b0 U
b0 L
b0 B
0C
b1010 |
b10 '
b10 I
b10 W
b10 q
b1011 s
b1 (
b1 F
b1 p
b1010 r
b110011 M
b101101010000010100110011 )
b101101010000010100110011 P
b101101010000010100110011 S
b111101000 1
b111101000 \
b111101000 ^
b111101000 b
b111100100 2
b111100100 G
b111100100 T
b111100100 Z
b111100100 [
b111100100 ]
b1000000000 o
1!
#50
0!
#55
b111101100 #
b111101100 e
b111101100 {
1<
b0 =
b0 D
b0 N
16
b0 *
b0 J
b0 R
b0 `
b11000000100 O
b1000000000 +
b1000000000 A
b1000000000 V
b1000000000 _
b1000000000 c
b1000000000 0
b1000000000 Y
b1000000000 a
b0 -
b0 ?
b0 K
b1100111 Q
b0 |
b0 '
b0 I
b0 W
b0 q
b0 s
b1 r
b1100111 M
b1000000001100111 )
b1000000001100111 P
b1000000001100111 S
0$
0%
b1000000000 .
b1000000000 @
b1000000000 H
b1000000000 (
b1000000000 F
b1000000000 p
b11 f
b111101100 1
b111101100 \
b111101100 ^
b111101100 b
b111101000 2
b111101000 G
b111101000 T
b111101000 Z
b111101000 [
b111101000 ]
1!
#60
0!
#65
b1000000100 0
b1000000100 Y
b1000000100 a
b11 =
b11 D
b11 N
06
1$
1%
b1 -
b1 ?
b1 K
0"
b1 +
b1 A
b1 V
b1 _
b1 c
b11110000000 O
b1 *
b1 J
b1 R
b1 `
b1 #
b1 e
b1 {
b0 .
b0 @
b0 H
b10011 Q
b1011 |
b1000000000 '
b1000000000 I
b1000000000 W
b1000000000 q
b1 s
b0 (
b0 F
b0 p
b0 r
b10011 M
b100000000010110010011 )
b100000000010110010011 P
b100000000010110010011 S
b1000000100 1
b1000000100 \
b1000000100 ^
b1000000100 b
b1000000000 2
b1000000000 G
b1000000000 T
b1000000000 Z
b1000000000 [
b1000000000 ]
1!
#70
0!
#75
b1000001000 #
b1000001000 e
b1000001000 {
1"
b0 +
b0 A
b0 V
b0 _
b0 c
x<
bx =
bx D
bx N
17
0%
b11111111111111111111111111011000 -
b11111111111111111111111111011000 ?
b11111111111111111111111111011000 K
b0 ,
b0 >
b0 E
b1xxx0001000 O
b11111111111111111111111111011000 *
b11111111111111111111111111011000 J
b11111111111111111111111111011000 R
b11111111111111111111111111011000 `
b111011100 0
b111011100 Y
b111011100 a
b1101111 Q
b111 U
b111 L
b111 B
1C
b1 |
b0 '
b0 I
b0 W
b0 q
b11001 s
b11111 r
b1101111 M
b11111101100111111111000011101111 )
b11111101100111111111000011101111 P
b11111101100111111111000011101111 S
b1 g
b1000001000 1
b1000001000 \
b1000001000 ^
b1000001000 b
b1000000100 2
b1000000100 G
b1000000100 T
b1000000100 Z
b1000000100 [
b1000000100 ]
1!
#80
0!
#85
b110 ,
b110 >
b110 E
0"
b10 +
b10 A
b10 V
b10 _
b10 c
0<
b10 =
b10 D
b10 N
07
0$
0%
b1 -
b1 ?
b1 K
b10100000000 O
bx *
bx J
bx R
bx `
b10 #
b10 e
b10 {
b111100000 0
b111100000 Y
b111100000 a
b11 .
b11 @
b11 H
b110011 Q
b0 U
b0 L
b0 B
b1010 |
b1 '
b1 I
b1 W
b1 q
b1011 s
b11 (
b11 F
b11 p
b1010 r
b110011 M
b1000000101101010000010100110011 )
b1000000101101010000010100110011 P
b1000000101101010000010100110011 S
b111100000 1
b111100000 \
b111100000 ^
b111100000 b
b111011100 2
b111011100 G
b111011100 T
b111011100 Z
b111011100 [
b111011100 ]
b1000001000 o
1!
#90
0!
#95
b111100100 #
b111100100 e
b111100100 {
1<
b0 =
b0 D
b0 N
16
b0 *
b0 J
b0 R
b0 `
b10 ,
b10 >
b10 E
b11000000100 O
b1000001000 +
b1000001000 A
b1000001000 V
b1000001000 _
b1000001000 c
b1000001000 0
b1000001000 Y
b1000001000 a
b0 -
b0 ?
b0 K
b1100111 Q
0C
b0 |
b0 '
b0 I
b0 W
b0 q
b0 s
b1 r
b1100111 M
b1000000001100111 )
b1000000001100111 P
b1000000001100111 S
b1000001000 .
b1000001000 @
b1000001000 H
b1000001000 (
b1000001000 F
b1000001000 p
b10 f
b111100100 1
b111100100 \
b111100100 ^
b111100100 b
b111100000 2
b111100000 G
b111100000 T
b111100000 Z
b111100000 [
b111100000 ]
1!
#100
0!
#105
b1000001100 0
b1000001100 Y
b1000001100 a
14
06
b1100 -
b1100 ?
b1100 K
b11011111100 +
b11011111100 A
b11011111100 V
b11011111100 _
b11011111100 c
b11001000000 O
b1100 *
b1100 J
b1100 R
b1100 `
bx #
bx e
bx {
b11011110000 .
b11011110000 @
b11011110000 H
b11 Q
b10 U
b10 L
b10 B
b1 |
b1100 s
b11011110000 (
b11011110000 F
b11011110000 p
b10 r
b11 M
b110000010010000010000011 )
b110000010010000010000011 P
b110000010010000010000011 S
b1000001100 1
b1000001100 \
b1000001100 ^
b1000001100 b
b1000001000 2
b1000001000 G
b1000001000 T
b1000001000 Z
b1000001000 [
b1000001000 ]
1!
#106
b0 #
b0 e
b0 {
b0 &
b0 X
b0 d
#110
0!
#115
b11100000000 #
b11100000000 e
b11100000000 {
b11100000000 +
b11100000000 A
b11100000000 V
b11100000000 _
b11100000000 c
b11 =
b11 D
b11 N
04
b10000 -
b10000 ?
b10000 K
b11110000000 O
b10000 *
b10000 J
b10000 R
b10000 `
b1000010000 0
b1000010000 Y
b1000010000 a
b10011 Q
b0 U
b0 L
b0 B
b10 |
b10000 s
b10011 M
b1000000010000000100010011 )
b1000000010000000100010011 P
b1000000010000000100010011 S
b0 o
b1000010000 1
b1000010000 \
b1000010000 ^
b1000010000 b
b1000001100 2
b1000001100 G
b1000001100 T
b1000001100 Z
b1000001100 [
b1000001100 ]
1!
#120
0!
#125
1"
b1000010100 #
b1000010100 e
b1000010100 {
b0 =
b0 D
b0 N
16
b0 -
b0 ?
b0 K
b11000000100 O
b0 *
b0 J
b0 R
b0 `
b0 +
b0 A
b0 V
b0 _
b0 c
b0 0
b0 Y
b0 a
0$
0%
b1100111 Q
b0 |
b0 s
b1 r
b1100111 M
b1000000001100111 )
b1000000001100111 P
b1000000001100111 S
b0 .
b0 @
b0 H
b1000010100 1
b1000010100 \
b1000010100 ^
b1000010100 b
b1000010000 2
b1000010000 G
b1000010000 T
b1000010000 Z
b1000010000 [
b1000010000 ]
b0 (
b0 F
b0 p
b11100000000 v
1!
#130
0!
#135
x"
bx +
bx A
bx V
bx _
bx c
x$
x%
bx -
bx ?
bx K
x/
x<
bx =
bx D
bx N
x4
x3
x:
x7
x6
x5
x;
bx *
bx J
bx R
bx `
bx O
18
bx #
bx e
bx {
b0 Q
b0 r
b0 M
b0 )
b0 P
b0 S
b100 1
b100 \
b100 ^
b100 b
b0 2
b0 G
b0 T
b0 Z
b0 [
b0 ]
1!
#140
0!
#145
1!
#150
0!
#155
1!
#160
0!
#165
1!
#170
0!
#175
1!
#180
0!
#185
1!
#190
0!
#195
1!
#200
0!
#205
1!
#210
0!
#215
1!
#220
0!
#225
1!
#230
0!
#235
1!
#240
0!
#245
1!
#250
0!
#255
1!
#260
0!
#265
1!
#270
0!
#275
1!
#280
0!
#285
1!
#290
0!
#295
1!
#300
0!
#305
1!
#310
0!
#315
1!
#320
0!
#325
1!
#330
0!
#335
1!
#340
0!
#345
1!
#350
0!
#355
1!
#360
0!
#365
1!
#370
0!
#375
1!
#380
0!
#385
1!
#390
0!
#395
1!
#400
0!
#405
1!
#410
0!
#415
1!
#420
0!
#425
1!
#430
0!
#435
1!
#440
0!
#445
1!
#450
0!
#455
1!
#460
0!
#465
1!
#470
0!
#475
1!
#480
0!
#485
1!
#490
0!
#495
1!
#500
0!
#505
1!
#510
0!
#515
1!
#520
0!
#525
1!
#530
0!
#535
1!
#540
0!
#545
1!
#550
0!
#555
1!
#560
0!
#565
1!
#570
0!
#575
1!
#580
0!
#585
1!
#590
0!
#595
1!
#600
0!
#605
1!
#610
0!
#615
1!
#620
0!
#625
1!
#630
0!
#635
1!
#640
0!
#645
1!
#650
0!
#655
1!
#660
0!
#665
1!
#670
0!
#675
1!
#680
0!
#685
1!
#690
0!
#695
1!
#700
0!
#705
1!
#710
0!
#715
1!
#720
0!
#725
1!
#730
0!
#735
1!
#740
0!
#745
1!
#750
0!
#755
1!
#760
0!
#765
1!
#770
0!
#775
1!
#780
0!
#785
1!
#790
0!
#795
1!
#800
0!
#805
1!
#810
0!
#815
1!
#820
0!
#825
1!
#830
0!
#835
1!
#840
0!
#845
1!
#850
0!
#855
1!
#860
0!
#865
1!
#870
0!
#875
1!
#880
0!
#885
1!
#890
0!
#895
1!
#900
0!
#905
1!
#910
0!
#915
1!
#920
0!
#925
1!
#930
0!
#935
1!
#940
0!
#945
1!
#950
0!
#955
1!
#960
0!
#965
1!
#970
0!
#975
1!
#980
0!
#985
1!
#990
0!
#995
1!
#1000
